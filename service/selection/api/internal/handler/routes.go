// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"hey-go-zero/service/selection/api/internal/svc"

	"github.com/tal-tech/go-zero/rest"
)

func RegisterHandlers(engine *rest.Server, serverCtx *svc.ServiceContext) {
	engine.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.ManagerCheck},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/api/selection/create",
					Handler: createSelectionHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/selection/edit",
					Handler: editSelectionHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/selection/add/course/:id",
					Handler: addCourseHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/selection/delete/course/:id",
					Handler: deleteCourseHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/selection/delete/:id",
					Handler: deleteSelectionHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	engine.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.StudentCheck},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/api/selection/info/:id",
					Handler: getSelectionHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/selection/select/:id",
					Handler: selectHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/api/selection/mine/list",
					Handler: mineSelectionsHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	engine.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.TeacherCheck},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/api/selection/teaching/courses",
					Handler: getTeachingCoursesHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/api/selection/teaching/students/:id",
					Handler: getTeachingStudentsHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
